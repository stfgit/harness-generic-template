pipeline:
  name: harness generic
  identifier: harness_generic
  projectIdentifier: harness_generic_template
  orgIdentifier: stf
  variables:
    - name: environment
      type: String
      required: true
      value: <+input>.allowedValues(dev, staging, prod)
    - name: buildTool
      type: String
      required: true
      value: <+input>.allowedValues(npm, maven, yarn)
    - name: dockerImage
      type: String
      value: <+input>.default(node:20-alpine)
    - name: dockerRegistry
      type: String
      required: true
      value: <+input>.allowedValues(org.Dockerhub,account.harnessImage)
    - name: k8sCluster
      type: String
      value: <+input>
    - name: deployNamespace
      type: String
      value: <+input>.default(default)
    - name: secretApiKey
      type: Secret
      value: <+input>
  stages:
    - stage:
        name: Build Stage
        identifier: build_stage
        template:
          templateRef: build_stage_template
          versionLabel: v0.1
          templateInputs:
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+pipeline.variables.k8sCluster>
              execution:
                steps:
                  - step:
                      identifier: run_build
                      type: Run
                      spec:
                        connectorRef: <+input>.allowedValues(org.Dockerhub,account.harnessImage)
                        image: <+pipeline.variables.dockerImage>
                        command: |
                          if [ "<+pipeline.variables.buildTool>" = "npm" ]; then
                            npm ci && npm run build
                          elif [ "<+pipeline.variables.buildTool>" = "maven" ]; then
                            mvn clean install
                          fi
                        resources:
                          limits:
                            memory: <+input>.default(2Gi)
                            cpu: <+input>.default(2000m)
    - stage:
        name: Audit Stage
        identifier: audit_stage
        template:
          templateRef: audit_stage_template
          versionLabel: v0.1
          templateInputs:
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+pipeline.variables.k8sCluster>
              execution:
                steps:
                  - step:
                      identifier: npm_audit
                      type: Run
                      spec:
                        connectorRef: <+input>.allowedValues(org.Dockerhub,account.harnessImage)
    - stage:
        name: Deploy Stage
        identifier: deploy_stage
        template:
          templateRef: deploy_stage_template
          versionLabel: v0.1
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: <+pipeline.variables.environment>
                infrastructureDefinitions: <+input>
              service:
                serviceRef: <+input>
                serviceInputs: <+input>
