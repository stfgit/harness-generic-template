pipeline:
  name: check stage tplts
  identifier: check_stage_tplts
  projectIdentifier: harness_generic_template
  orgIdentifier: stf
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: stfgit/mower-java
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: check sources
        identifier: check_sources
        template:
          templateRef: account.source_code_scan
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - parallel:
                      - step:
                          identifier: owasp
                          type: Owasp
                          spec:
                            resources:
                              limits:
                                memory: <+input>.default(2Gi)
                                cpu: <+input>.default(500m)
                      - step:
                          identifier: aquatrivy
                          type: AquaTrivy
                          spec:
                            resources:
                              limits:
                                memory: <+input>
                                cpu: <+input>
                      - step:
                          identifier: gitleaks
                          type: Gitleaks
                          spec:
                            resources:
                              limits:
                                memory: <+input>
                                cpu: <+input>
            delegateSelectors: <+input>
    - stage:
        name: build and push
        identifier: build_and_push
        template:
          templateRef: account.maven_build_stage_tplt
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - step:
                      identifier: mvn_build
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(maven:3.9.6-eclipse-temurin-21)
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
                  - step:
                      identifier: mvn_test_with_coverage
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(maven:3.9.6-eclipse-temurin-21)
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
                  - step:
                      identifier: coverage_quality_gate
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(alpine:latest)
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
                  - step:
                      identifier: build_and_push_docker_image
                      type: BuildAndPushDockerRegistry
                      spec:
                        connectorRef: <+input>
                        repo: <+input>
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
            delegateSelectors: <+input>
    - stage:
        name: check images
        identifier: check_images
        template:
          templateRef: account.images_scan
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - step:
                      identifier: aquatrivy_container
                      type: AquaTrivy
                      spec:
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
            delegateSelectors: <+input>
    - stage:
        name: rollout deploy dev
        identifier: rollout_deploy_dev
        tags: {}
        template:
          templateRef: account.deploy_k8s
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: dev
                infrastructureDefinitions:
                  - identifier: infra_dev
                    inputs:
                      identifier: infra_dev
                      type: KubernetesDirect
                      spec:
                        connectorRef: org.kubdesktop
                        namespace: dev
              service:
                serviceRef: mower_svc
                serviceInputs:
                  serviceDefinition:
                    type: Kubernetes
                    spec:
                      artifacts:
                        primary:
                          primaryArtifactRef: mower
                          sources:
                            - identifier: mower
                              type: DockerRegistry
                              spec:
                                tag: latest
            delegateSelectors:
              - helm-delegate
    - stage:
        name: mep approval
        identifier: approval
        tags: {}
        template:
          templateRef: account.manual_approval
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: Approval
            spec:
              execution:
                steps:
                  - step:
                      identifier: approval
                      type: HarnessApproval
                      spec:
                        approvers:
                          minimumCount: <+input>.default(1)
                          userGroups: <+input>.allowedValues(org.DevOps_Team)
            delegateSelectors: <+input>
    - stage:
        name: rollout deploy prod
        identifier: prod_rollout_deploy
        tags: {}
        template:
          templateRef: account.deploy_k8s
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: prod
                gitBranch: main
                infrastructureDefinitions:
                  - identifier: infra_prod
              service:
                useFromStage:
                  stage: rollout_deploy_dev
            delegateSelectors:
              - helm-delegate
  delegateSelectors:
    - helm-delegate-k8s-fat
  notificationRules:
    - name: notifs
      identifier: notifs
      pipelineEvents:
        - type: PipelineSuccess
        - type: PipelineFailed
      notificationMethod:
        type: Email
        spec:
          userGroups:
            - org._organization_all_users
          recipients: []
      enabled: true
