pipeline:
  name: check stage tplts
  identifier: check_stage_tplts
  projectIdentifier: harness_generic_template
  orgIdentifier: stf
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: stfgit/mower-java
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: check sources
        identifier: check_sources
        template:
          templateRef: account.source_code_scan
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
            delegateSelectors: <+input>
    - stage:
        name: build and push
        identifier: build_and_push
        template:
          templateRef: account.maven_build_stage_tplt
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - step:
                      identifier: mvn_build
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(maven:3.9.6-eclipse-temurin-21)
                  - step:
                      identifier: mvn_test_with_coverage
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(maven:3.9.6-eclipse-temurin-21)
                  - step:
                      identifier: coverage_quality_gate
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(alpine:latest)
                  - step:
                      identifier: build_and_push_docker_image
                      type: BuildAndPushDockerRegistry
                      spec:
                        connectorRef: <+input>
                        repo: <+input>
            delegateSelectors: <+input>
    - stage:
        name: check images
        identifier: check_images
        template:
          templateRef: account.images_scan
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
            delegateSelectors: <+input>
    - stage:
        name: rollout deploy
        identifier: rollout_deploy_dev
        tags: {}
        template:
          templateRef: account.deploy_k8s
          versionLabel: v0.1
          gitBranch: main
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: <+input>
                environmentInputs: <+input>
                serviceOverrideInputs: <+input>
                infrastructureDefinitions: <+input>
              service:
                serviceRef: <+input>
                serviceInputs: <+input>
            delegateSelectors: <+input>
  delegateSelectors:
    - delegate-k8s-docacloud
