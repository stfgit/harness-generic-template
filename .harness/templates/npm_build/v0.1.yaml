template:
  name: npm build and push docker
  identifier: npm_build
  versionLabel: v0.1
  type: Stage
  tags:
    npm: ""
    build: ""
    docker: ""
  spec:
    type: CI
    spec:
      cloneCodebase: true
      infrastructure:
        type: KubernetesDirect
        spec:
          connectorRef: account.k8sdocacloud
          namespace: <+input>.default(harness-ci)
          automountServiceAccountToken: true
          nodeSelector: {}
          os: Linux
      execution:
        steps:
          - step:
              type: Run
              name: Install Dependencies
              identifier: Install_Dependencies
              spec:
                connectorRef: <+input>
                image: <+input>.default(node:20)
                shell: Sh
                command: |-
                  echo "Installation des dépendances Next.js..."
                  npm cache clean --force
                  npm install --prefer-offline --no-audit --no-fund
                  echo "Vérification installation..."
                  npx next --version
                  echo "Dépendances installées avec succès"
          - step:
              type: Run
              name: ESLint Check
              identifier: ESLint_Check
              spec:
                connectorRef: <+input>
                image: <+input>.default(node:20)
                shell: Sh
                command: |-
                  echo "Exécution du linting..."
                  npm run lint
                  echo "Linting terminé"
          - step:
              type: Run
              name: Build Application
              identifier: Build_Application
              spec:
                connectorRef: <+input>
                image: <+input>.default(node:20)
                shell: Sh
                command: |-
                  echo "Construction de l'application Next.js..."
                  npm run build
                  echo "Build terminé avec succès"
                  ls -la .next/
          - step:
              type: Run
              name: Unit Tests
              identifier: Unit_Tests
              spec:
                connectorRef: <+input>
                image: <+input>.default(node:20)
                shell: Sh
                command: |-
                  echo "Exécution des tests unitaires..."
                  npm run test:ci || echo "Tests a implementer"
          - step:
              type: Run
              name: NPM Audit
              identifier: NPM_Audit
              spec:
                connectorRef: <+input>
                image: <+input>.default(node:20)
                shell: Sh
                command: |-
                  echo "Audit de sécurité des dépendances npm..."
                  npm audit --audit-level=high || true
                  echo "Audit npm terminé"
          - step:
              type: BuildAndPushDockerRegistry
              name: Build and Push Docker Image
              identifier: BuildAndPushDockerRegistry_1
              spec:
                connectorRef: <+input>
                repo: <+input>
                tags:
                  - <+pipeline.sequenceId>
                  - latest
                caching: true
                dockerfile: Dockerfile
                context: .
                optimize: true
                resources:
                  limits:
                    memory: 4Gi
                    cpu: 1500m
              when:
                stageStatus: Success
      sharedPaths:
        - /harness/node_modules
        - /harness/.next
        - /harness/.npm
      caching:
        enabled: false
        paths: []
      buildIntelligence:
        enabled: false
