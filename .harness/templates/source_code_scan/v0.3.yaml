template:
  name: source code scan - hardened simple
  identifier: source_code_scan
  versionLabel: v0.3
  type: Stage
  tags:
    security: "enterprise"
    compliance: "hardened"
  spec:
    type: SecurityTests
    spec:
      cloneCodebase: true
      infrastructure:
        type: KubernetesDirect
        spec:
          connectorRef: <+input>
          namespace: <+input>.default(harness-ci)
          automountServiceAccountToken: true
          nodeSelector: {}
          os: Linux
      execution:
        steps:
          - parallel:
              # OWASP Dependency Check - Configuration Durcie
              - step:
                  type: Owasp
                  name: OWASP Dependency Check - Hardened
                  identifier: owasp
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: <+input>.default(medium)
                    resources:
                      limits:
                        memory: <+input>.default(4Gi)
                        cpu: <+input>.default(2000m)
                      requests:
                        memory: 2Gi
                        cpu: 1000m
                  timeout: 15m

              # Trivy FS Scan - Configuration Durcie
              - step:
                  type: AquaTrivy
                  name: Trivy Filesystem Scan - Hardened
                  identifier: aquatrivy
                  spec:
                    mode: orchestration
                    config: fs
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: <+input>.default(medium)
                    resources:
                      limits:
                        memory: <+input>.default(3Gi)
                        cpu: <+input>.default(1500m)
                      requests:
                        memory: 1.5Gi
                        cpu: 750m
                    privileged: false
                  timeout: 10m

              # GitLeaks - Secret Detection
              - step:
                  type: Gitleaks
                  name: GitLeaks Secret Detection
                  identifier: gitleaks
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: <+input>.default(low)
                    resources:
                      limits:
                        memory: <+input>.default(2Gi)
                        cpu: <+input>.default(1000m)
                      requests:
                        memory: 1Gi
                        cpu: 500m
                  timeout: 5m

          # Post-processing s√©curis√©
          - step:
              type: Run
              name: Security Summary Report
              identifier: security_summary
              spec:
                connectorRef: <+input>
                image: alpine:3.19
                shell: Sh
                command: |
                  echo "üìä SECURITY SCAN SUMMARY - HARDENED"
                  echo "===================================="
                  echo "‚è∞ Scan Completed: $(date -Iseconds)"
                  echo "üîí Security Level: ENTERPRISE HARDENED"
                  echo "üìã Repository: <+codebase.repoName>"
                  echo "üåø Branch: <+codebase.branch>"
                  echo "‚úÖ All security scans completed successfully"
                resources:
                  limits:
                    memory: 256Mi
                    cpu: 100m

    delegateSelectors: <+input>

  description: |
    üõ°Ô∏è ENTERPRISE HARDENED SECURITY SCAN TEMPLATE v0.3 - SIMPLIFIED
    
    This template implements comprehensive security scanning with:
    ‚Ä¢ OWASP Dependency Check with hardened policies
    ‚Ä¢ Trivy filesystem scanning for vulnerabilities
    ‚Ä¢ GitLeaks secret detection with zero-tolerance
    ‚Ä¢ Simplified configuration for reliability
    ‚Ä¢ Enterprise-grade resource allocation
    
    üîí Security Features:
    - Hardened fail_on_severity defaults (medium for vulns, low for secrets)
    - Non-privileged execution context
    - Comprehensive resource limits
    - Simplified args for better compatibility
    
    ‚ö†Ô∏è  POLICY: This template enforces strict security validation.
    Any critical findings will block the pipeline progression.