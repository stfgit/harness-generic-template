template:
  name: npm pipeline
  identifier: npm_pipeline
  versionLabel: v0.1
  type: Pipeline
  tags:
    npm: ""
    docker: ""
  spec:
    properties:
      ci:
        codebase:
          connectorRef: <+input>
          repoName: <+input>
          build: <+input>
          sparseCheckout: []
    stages:
      - stage:
          name: scan sources
          identifier: scan_sources
          template:
            templateRef: account.source_code_scan
            versionLabel: v0.1
            templateInputs:
              type: SecurityTests
              spec:
                infrastructure:
                  type: KubernetesDirect
                  spec:
                    connectorRef: <+input>
                    namespace: <+input>.default(harness-ci)
                execution:
                  steps:
                    - parallel:
                        - step:
                            identifier: owasp
                            type: Owasp
                            spec:
                              advanced:
                                fail_on_severity: <+input>
                              resources:
                                limits:
                                  memory: <+input>.default(2Gi)
                                  cpu: <+input>.default(500m)
                        - step:
                            identifier: aquatrivy
                            type: AquaTrivy
                            spec:
                              advanced:
                                fail_on_severity: <+input>
                              resources:
                                limits:
                                  memory: <+input>
                                  cpu: <+input>
                        - step:
                            identifier: gitleaks
                            type: Gitleaks
                            spec:
                              advanced:
                                fail_on_severity: <+input>
                              resources:
                                limits:
                                  memory: <+input>
                                  cpu: <+input>
              delegateSelectors: <+input>
      - stage:
          name: npm build and push
          identifier: npm_build_and_push
          template:
            templateRef: account.npm_build
            versionLabel: v0.1
            templateInputs:
              type: CI
              spec:
                infrastructure:
                  type: KubernetesDirect
                  spec:
                    connectorRef: <+input>
                    namespace: <+input>.default(harness-ci)
                execution:
                  steps:
                    - step:
                        identifier: Install_Dependencies
                        type: Run
                        spec:
                          connectorRef: <+input>
                          image: <+input>.default(node:20)
                    - step:
                        identifier: ESLint_Check
                        type: Run
                        spec:
                          connectorRef: <+input>
                          image: <+input>.default(node:20)
                    - step:
                        identifier: Build_Application
                        type: Run
                        spec:
                          connectorRef: <+input>
                          image: <+input>.default(node:20)
                    - step:
                        identifier: Unit_Tests
                        type: Run
                        spec:
                          connectorRef: <+input>
                          image: <+input>.default(node:20)
                    - step:
                        identifier: NPM_Audit
                        type: Run
                        spec:
                          connectorRef: <+input>
                          image: <+input>.default(node:20)
                    - step:
                        identifier: BuildAndPushDockerRegistry_1
                        type: BuildAndPushDockerRegistry
                        spec:
                          connectorRef: <+input>
                          repo: <+input>
      - stage:
          name: scan images
          identifier: scan_images
          template:
            templateRef: account.images_scan
            versionLabel: v0.1
            templateInputs:
              type: SecurityTests
              spec:
                infrastructure:
                  type: KubernetesDirect
                  spec:
                    connectorRef: <+input>
                    namespace: <+input>.default(harness-ci)
                execution:
                  steps:
                    - step:
                        identifier: aquatrivy_container
                        type: AquaTrivy
                        spec:
                          advanced:
                            fail_on_severity: <+input>
                          resources:
                            limits:
                              memory: <+input>
                              cpu: <+input>
              delegateSelectors: <+input>
      - stage:
          name: deploy dev
          identifier: deploy
          tags: {}
          template:
            templateRef: account.deploy_k8s
            versionLabel: v0.1
            templateInputs:
              type: Deployment
              spec:
                environment:
                  environmentRef: <+input>
                  environmentInputs: <+input>
                  serviceOverrideInputs: <+input>
                  infrastructureDefinitions: <+input>
                service:
                  serviceRef: <+input>
                  serviceInputs: <+input>
              delegateSelectors: <+input>
      - stage:
          name: mep approval
          identifier: mep_approval
          tags: {}
          template:
            templateRef: account.manual_approval
            versionLabel: v0.1
            templateInputs:
              type: Approval
              spec:
                execution:
                  steps:
                    - step:
                        identifier: approval
                        type: HarnessApproval
                        spec:
                          approvers:
                            minimumCount: <+input>.default(1)
                            userGroups: <+input>
              delegateSelectors: <+input>
      - stage:
          name: deploy prod
          identifier: deploy_prod
          tags: {}
          template:
            templateRef: account.deploy_k8s
            versionLabel: v0.1
            templateInputs:
              type: Deployment
              spec:
                environment:
                  environmentRef: <+input>
                  environmentInputs: <+input>
                  serviceOverrideInputs: <+input>
                  infrastructureDefinitions: <+input>
                service:
                  useFromStage:
                    stage: deploy
              delegateSelectors: <+input>
